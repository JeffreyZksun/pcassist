#labels Featured,Phase-Design
This page defines the responsibility of the classes.	
	
=IDataObject=	
==Description==
It is an interface. All the classes which need persist data are derived from this class.	
	
=Behavior, Action, Condition=	
	
==Class Hierarchy==
{{{	
IDataObject
	Behavior
		Action
		Condition
}}}
==Description==
The Behavior class represents behavior to be executed. Its general workflow is doing something based on the input and generate the output.

In logic, the condition and action are the same. They represent behaviors. The minor difference is condition generally makes some CHECKS and action generally makes some CHANGES. 
	
The Behavior class only maintains the ParameterSet for the input and output. All the execution logic is delegated to the executor.
	
The input ParameterSet contains a ObjectId and ExecutorName. The ObjectId is a unique id which is used to retrieve this behavior. The ExecutorName is a name which is used to get the related executor from the ExecutorFactory.

=Executor=
==Description==
This is the base class for the executor. It declares the general behaviors which all the concrete exectors should have. Its basic behavior is doing something based on the input and return output.

{{{	
	ParameterSet Execute(ParameterSet input)
	{
		// Get input
		
		// Do the action
		
		// Generate output and return it
	}
}}}

==Methods==
|| *Name* || *Description* ||
|| Execute || Execute the action this exectuor should do ||

=ExecutorFactory=
ExecutorFactory is a singleton which maintains a map of the executor name and the concrete executor.
	